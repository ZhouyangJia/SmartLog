strcasecmp	strcasecmp(ap_getword(r->pool,&auth_line,''),"Basic")(+)
strcasecmp	strcasecmp(ap_getword(r->pool,&auth_line,''),"Basic")(+)
strcasecmp	(strcasecmp(arg,"off")!=0)&&(strcasecmp(arg,"none")!=0)(+)
strcasecmp	(strcasecmp(arg,"off")!=0)&&(strcasecmp(arg,"none")!=0)(+)
strcasecmp	strcasecmp(child->provider_name,              parent->provider_name)!=0(+)
strcasecmp	!strcasecmp(cmd->cmd->name,"MaxClients")(+)
strcasecmp	!strcasecmp(cmd->cmd->name,"MaxRequestsPerChild")(+)
strcasecmp	!r_uri.hostinfo||strcmp(resp->uri,r_uri.hostinfo)(+)
strcasecmp	strcasecmp(expect,"100-continue")==0(-)
strcasecmp	!strcasecmp(first,end_token)(+)
strcasecmp	first(+)
strcasecmp	!strncmp(first,"</",2)(+)
strcasecmp	!strcasecmp(first,end_token)(+)
apr_table_get	apr_is_empty_table(grpstatus)(+)
apr_table_get	apr_is_empty_table(grpstatus)(+)
apr_table_get	name==NULL(+)
apr_table_get	apr_table_get(params,"xml")(-)
apr_table_get	apr_table_get(r->headers_in,"label")!=NULL(+)
apr_table_get	!apr_table_get(r->subprocess_env,"force-gzip")(+)
apr_table_get	!early&&(envar==condition_early)(-)
apr_table_get	early&&(envar!=condition_early)(-)
apr_table_get	strcasecmp(ap_getword(r->pool,&auth_line,''),"Basic")(+)
apr_table_get	(auth_line=apr_table_get(r->headers_in,"Authorization"))(+)
apr_table_get	strcEQ(+)
apr_table_get	strcasecmp(ap_getword(r->pool,&auth_line,''),"Basic")(+)
apr_table_get	(buf=apr_table_get(r->headers_out,wa))(-)
apr_table_get	(buf=apr_table_get(r->headers_out,wa))(-)
apr_file_open	apr_file_open(&eval->fcode[i],filename,             APR_WRITE|APR_CREATE,APR_OS_DEFAULT,             eval->pool)!=APR_SUCCESS(+)
apr_file_open	apr_temp_dir_get((constchar**)&dirname,cntxt)!=APR_SUCCESS(+)
apr_file_open	apr_file_mktemp(&tfp,dirname,0,cntxt)!=APR_SUCCESS(+)
apr_file_open	apr_file_open(&f,argv[1],APR_READ,APR_OS_DEFAULT,cntxt)!=APR_SUCCESS(+)
apr_file_open	(rv=apr_file_read(file,pbuf->buf,&amt))!=APR_SUCCESS    ||amt!=finfo.size(+)
apr_file_open	apr_temp_dir_get((constchar**)&dirname,pool)!=APR_SUCCESS(+)
apr_file_open	apr_file_mktemp(&ftemp,dirname,0,pool)!=APR_SUCCESS(+)
apr_file_open	apr_file_open(&fpw,pwfilename,APR_READ|APR_BUFFERED,             APR_OS_DEFAULT,pool)!=APR_SUCCESS(+)
apr_file_open	apr_file_open(&statsfile,stats,           APR_FOPEN_WRITE|APR_FOPEN_CREATE|APR_FOPEN_TRUNCATE,             APR_OS_DEFAULT,pool)!=APR_SUCCESS(+)
apr_file_open	rc!=APR_SUCCESS(+)
apr_file_open	rc!=APR_SUCCESS(+)
apr_file_open	!fspec(+)
apr_file_open	(rc=apr_stat(&tmp.finfo,fspec,APR_FINFO_MIN,                cmd->temp_pool))!=APR_SUCCESS(+)
dav_find_child	(aset=dav_find_child(doc->root,"activity-set"))!=NULL(+)
dav_find_child	dav_find_child(aset,"new")!=NULL(-)
dav_find_child	(child=dav_find_child(child,"href"))==NULL(+)
dav_find_child	(child=dav_find_child(child,"href"))==NULL(+)
dav_find_child	(child=dav_find_child(child,"label-name"))==NULL(+)
dav_find_child	(child=dav_find_child(doc->root,"add"))!=NULL(-)
dav_find_child	(child=dav_find_child(doc->root,"set"))!=NULL(-)
dav_find_child	(child=dav_find_child(doc->root,"remove"))!=NULL(-)
dav_find_child	(child=dav_find_child(child,"label-name"))==NULL(+)
dav_find_child	(child=dav_find_child(doc->root,"label-name"))!=NULL(-)
dav_find_child	(child=dav_find_child(doc->root,"version"))!=NULL(+)
dav_find_child	(child=dav_find_child(child,"href"))==NULL(+)
apr_socket_opt_set	rv!=APR_SUCCESS&&rv!=APR_ENOTIMPL(+)
apr_socket_opt_set	rv!=APR_SUCCESS(+)
apr_socket_opt_set	rv!=APR_SUCCESS&&rv!=APR_ENOTIMPL(+)
apr_socket_opt_set	rv!=APR_SUCCESS(+)
apr_socket_opt_set	(rv=apr_socket_opt_set(c->aprsock,APR_SO_NONBLOCK,1))    !=APR_SUCCESS(+)
apr_socket_opt_set	rv!=APR_SUCCESS&&rv!=APR_ENOTIMPL(+)
apr_socket_opt_set	rv!=APR_SUCCESS(+)
apr_socket_opt_set	rv!=APR_SUCCESS&&rv!=APR_ENOTIMPL(+)
apr_socket_opt_set	rv!=APR_SUCCESS(+)
apr_socket_opt_set	(rv=apr_socket_create(&data_sock,connect_addr->family,SOCK_STREAM,0,r->pool))!=APR_SUCCESS(+)
apr_socket_opt_set	rv!=APR_SUCCESS&&rv!=APR_ENOTIMPL(+)
apr_socket_opt_set	rv!=APR_SUCCESS(+)
apr_socket_opt_set	rv!=APR_SUCCESS&&rv!=APR_ENOTIMPL(+)
apr_socket_opt_set	rv!=APR_SUCCESS(+)
apr_socket_opt_set	(rv=apr_socket_create(&data_sock,connect_addr->family,SOCK_STREAM,0,r->pool))!=APR_SUCCESS(+)
ap_get_brigade	ret==APR_SUCCESS(-)
ap_get_brigade	rv==APR_EOF(-)
ap_get_brigade	rv!=APR_SUCCESS(+)
ap_get_brigade	rv==APR_SUCCESS(+)
ap_get_brigade	rv==APR_SUCCESS(-)
ap_get_brigade	!APR_STATUS_IS_EAGAIN(rv)&&!APR_STATUS_IS_EOF(+)
ap_get_brigade	rv==APR_SUCCESS(+)
ap_get_brigade	rv==APR_SUCCESS(-)
ap_get_brigade	!APR_STATUS_IS_EAGAIN(+)
ap_get_brigade	APR_SUCCESS==rv&&len>ctx->remaining(+)
ap_get_brigade	rv!=APR_SUCCESS||ctx->remaining<0(+)
ap_get_brigade	rv!=APR_SUCCESS||ctx->remaining<0(+)
apr_file_remove	(lcl_status=apr_file_remove(dst,p))!=APR_SUCCESS(+)
apr_file_remove	is_move&&(status=apr_file_remove(src,p))!=APR_SUCCESS(+)
apr_file_remove	is_move&&(status=apr_file_remove(src,p))!=APR_SUCCESS(+)
apr_file_remove	(lcl_status=apr_file_remove(dst,p))!=APR_SUCCESS(+)
apr_file_remove	(rc!=APR_SUCCESS)&&!APR_STATUS_IS_ENOENT(+)
apr_file_remove	(rc!=APR_SUCCESS)&&!APR_STATUS_IS_ENOENT(+)
apr_file_remove	(rc!=APR_SUCCESS)&&!APR_STATUS_IS_ENOENT(+)
apr_file_remove	APR_SUCCESS!=rv(+)
apr_file_remove	APR_SUCCESS!=rv(+)
apr_file_remove	rv==APR_SUCCESS(+)
apr_file_remove	rv!=APR_SUCCESS(+)
ap_proxy_canon_netloc	err(+)
ap_proxy_canon_netloc	err(+)
ap_proxy_canon_netloc	err(+)
ap_proxy_canon_netloc	err(+)
ap_proxy_canon_netloc	err(+)
ap_proxy_connect_backend	ap_proxy_connect_backend(FCGI_SCHEME,backend,worker,r->server)(+)
ap_proxy_connect_backend	ap_proxy_connect_backend(proxy_function,backend,worker,r->server)(+)
ap_proxy_connect_backend	ap_proxy_connect_backend(PROXY_FUNCTION,backend,worker,r->server)(+)
ap_proxy_connect_backend	ap_proxy_connect_backend(scheme,backend,worker,r->server)(+)
ap_proxy_connect_backend	ap_proxy_connect_backend(scheme,backend,worker,r->server)(+)
apr_dir_close	apr_err(+)
apr_dir_close	apr_err(+)
apr_dir_close	status(+)
apr_dir_close	status(+)
apr_brigade_create	(status=ap_pass_brigade(dc->output,bb))!=APR_SUCCESS(+)
apr_brigade_create	(status=ap_pass_brigade(dc->output,bb))!=APR_SUCCESS(+)
apr_brigade_create	(serr=dav_svn__brigade_puts(bb,output,                  "</S:get-location-segments-report>"                  DEBUG_CR))(+)
apr_brigade_create	(status=ap_pass_brigade(output,bb))!=APR_SUCCESS(+)
apr_brigade_create	(status=ap_pass_brigade(output,bb))!=APR_SUCCESS(+)
apr_brigade_create	(status=ap_pass_brigade(output,bb))!=APR_SUCCESS(+)
apr_brigade_write	(status=ap_pass_brigade(output,bb))!=APR_SUCCESS(+)
apr_brigade_write	(status=ap_pass_brigade(output,bb))!=APR_SUCCESS(+)
apr_brigade_write	apr_err!=APR_SUCCESS(+)
apr_brigade_write	status!=APR_SUCCESS(+)
apr_brigade_write	status!=APR_SUCCESS(+)
apr_file_open	apr_err(+)
apr_file_open	apr_err(+)
apr_file_open	apr_err(+)
apr_file_open	apr_err(+)
apr_file_open	apr_err(+)
apr_file_open	status!=APR_SUCCESS(+)
apr_file_open	status||len!=strlen(file_data[j])(+)
apr_file_open	status||len!=strlen(NL)(+)
apr_file_open	!status(-)
apr_file_open	status(+)
apr_file_open	status(+)
apr_file_open_stdin	(apr_err=apr_file_open_stdin(&f,pool))(+)
apr_file_open_stdin	apr_err(+)
apr_file_open_stdin	apr_err(+)
apr_file_open_stdin	apr_err(+)
apr_file_open_stdin	apr_err(+)
apr_file_open_stdin	status(+)
apr_file_open_stdin	status(+)
apr_file_open_stdin	status(+)
apr_file_open_stdin	status(+)
apr_hash_get	apr_hash_get(hash,name,APR_HASH_KEY_STRING)(-)
apr_hash_get	!apr_hash_get(path_hash,local_relpath,APR_HASH_KEY_STRING)(+)
apr_hash_get	(value=svn_hash_gets(headers,SVN_REPOS_DUMPFILE_UUID))(-)
apr_hash_get	(value=svn_hash_gets(headers,                   SVN_REPOS_DUMPFILE_MAGIC_HEADER))(-)
apr_hash_get	copyfrom_path&&     skip_path(copyfrom_path,pb->prefixes,pb->do_exclude,pb->glob)(+)
apr_hash_get	(value=svn_hash_gets(headers,                   SVN_REPOS_DUMPFILE_MAGIC_HEADER))(-)
apr_hash_get	!end_path(+)
apr_hash_get	strcmp(ent->name,key)!=0(+)
apr_hash_get	apr_hash_count(exp_out_catalog)!=apr_hash_count(out_catalog)(+)
apr_hash_get	!exp_out_mergeinfo(+)
apr_hash_get	tcl&&(strcmp(kind,"file")==0)(-)
apr_hash_get	kind(+)
apr_hash_get	kindstr(+)
apr_pstrdup	strcmp(fs_path,lrb.peg_path)!=0(+)
apr_pstrdup	!last_str(+)
apr_pstrdup	!last_str(+)
apr_pstrdup	svn_path_is_url(path)(+)
apr_pstrdup	*last_err(+)
apr_pstrdup	*value=='\0'(+)
apr_pstrdup	value==NULL(-)
apr_pstrdup	*value==0(+)
apr_pstrdup	value==NULL(-)
apr_pstrdup	*value=='\0'(+)
apr_pstrdup	value==NULL(-)
apr_pstrdup	*value==0(+)
apr_pstrdup	value==NULL(+)
apr_time_exp_lt	apr_err!=APR_SUCCESS(+)
apr_time_exp_lt	apr_time_exp_lt(&expt,result)!=APR_SUCCESS(+)
apr_time_exp_lt	apr_time_exp_gmt(&expt,result)!=APR_SUCCESS(+)
apr_time_exp_lt	apr_time_exp_lt(&expt,result)!=APR_SUCCESS(+)
apr_time_exp_lt	apr_time_exp_lt(&expt,result)!=APR_SUCCESS(+)
apr_time_exp_lt	apr_time_exp_gmt(&expt,result)!=APR_SUCCESS(+)
apr_time_exp_lt	apr_time_exp_lt(&expt,result)!=APR_SUCCESS(+)
apr_time_exp_lt	apr_time_exp_lt(&nowexp,now)!=APR_SUCCESS(+)
svn_cstring_tokenize	!str(+)
svn_cstring_tokenize	!str(+)
svn_cstring_tokenize	!str(+)
svn_cstring_tokenize	!str(+)
svn_cstring_tokenize	str==NULL(+)
svn_cstring_tokenize	strcmp(str,KIND_FILE)==0(-)
svn_cstring_tokenize	strcmp(str,KIND_DIR)==0(-)
svn_cstring_tokenize	str==NULL(+)
svn_cstring_tokenize	str==NULL(+)
svn_cstring_tokenize	str==NULL(+)
svn_cstring_tokenize	str==NULL(+)
svn_cstring_tokenize	str==NULL(+)
svn_cmdline__edit_file_externally	err&&(err->apr_err==SVN_ERR_CL_NO_EXTERNAL_EDITOR)(+)
svn_cmdline__edit_file_externally	err&&(err->apr_err==SVN_ERR_EXTERNAL_PROGRAM)(+)
svn_cmdline__edit_file_externally	err&&(err->apr_err==SVN_ERR_CL_NO_EXTERNAL_EDITOR)(+)
svn_cmdline__edit_file_externally	err&&(err->apr_err==SVN_ERR_EXTERNAL_PROGRAM)(+)
svn_cmdline__edit_file_externally	err&&(err->apr_err==SVN_ERR_CL_NO_EXTERNAL_EDITOR)(+)
svn_cmdline__edit_file_externally	err&&(err->apr_err==SVN_ERR_EXTERNAL_PROGRAM)(+)
svn_uri_skip_ancestor	switch_url&&!svn_uri__is_ancestor(repos_root,switch_url)(+)
svn_uri_skip_ancestor	!other_relpath(+)
svn_uri_skip_ancestor	!relpath(+)
svn_uri_skip_ancestor	!relpath(+)
svn_uri_skip_ancestor	!repos_relpath||!*repos_relpath(+)
svn_path_is_url	!svn_path_is_url(to_url)(+)
svn_path_is_url	!svn_path_is_url(to_url)(+)
svn_path_is_url	!svn_path_is_url(to_url)(+)
svn_path_is_url	!svn_path_is_url(to_url)(+)
svn_path_is_url	svn_path_is_url(from)!=svn_path_is_url(to)(+)
svn_path_is_url	uri&&svn_path_is_url(uri)(+)
svn_path_is_url	svn_path_is_url(url_or_path)(-)
svn_path_is_url	!svn_path_is_url(url)(+)
alloc_root	!(dump_tables=pos=(char**)alloc_root(&root,tables*sizeof(char*)))(+)
alloc_root	!(alloc_buff=(char*)alloc_root(&tz_storage,                   ALIGN_SIZE(sizeof(my_time_t)*                         tz_info->timecnt)+                   ALIGN_SIZE(tz_info->timecnt)+#ifdefABBR_ARE_USED                   ALIGN_SIZE(tz_info->charcnt)+#endif                   sizeof(TRAN_TYPE_INFO)*                   tz_info->typecnt))(+)
alloc_root	!(tz_lsis=(LS_INFO*)alloc_root(&tz_storage,                   sizeof(LS_INFO)*TZ_MAX_LEAPS))(+)
alloc_root	!(alloc_buff=(char*)alloc_root(&tz_storage,sizeof(TIME_ZONE_INFO)+                   tz_name->length()+1))(+)
alloc_root	!(opts=(my_option*)alloc_root(tmp_root,sizeof(my_option)*count))(+)
create_temp_file	(fd=create_temp_file(filename,NullS,ext,O_CREAT|O_WRONLY,    MYF(MY_WME)))<0(+)
create_temp_file	(fd=create_temp_file(query_file_path,              opt_tmpdir[0]?opt_tmpdir:NULL,              "sql",O_CREAT|O_SHARE|O_RDWR,              MYF(MY_WME)))<0(+)
create_temp_file	my_write(fd,sql_log_bin,sizeof(sql_log_bin)-1,        MYF(MY_FNABP|MY_WME))(+)
create_temp_file	my_write(fd,(uchar*)query,strlen(query),       MYF(MY_FNABP|MY_WME))(+)
create_temp_file	(fd=create_temp_file(temp_file_path,getenv("MYSQLTEST_VARDIR"),               "tmp",O_CREAT|O_SHARE|O_RDWR,               MYF(MY_WME)))<0(+)
create_temp_file	(fd=create_temp_file(temp_file_path,TMPDIR,              "tmp",O_CREAT|O_SHARE|O_RDWR,              MYF(MY_WME)))<0(+)
create_temp_file	my_write(fd,(uchar*)ds->str,ds->length,       MYF(MY_FNABP|MY_WME))||   my_seek(fd,0,SEEK_SET,MYF(0))==MY_FILEPOS_ERROR(+)
dict_table_open_on_name	ib_table(+)
dict_table_open_on_name	"ib_table	  &&((!DICT_TF2_FLAG_IS_SET(ib_table,DICT_TF2_FTS_HAS_DOC_ID)		&&table->s->fields!=dict_table_get_n_user_cols(ib_table))		||(DICT_TF2_FLAG_IS_SET(ib_table,DICT_TF2_FTS_HAS_DOC_ID)		  &&(table->s->fields			!=dict_table_get_n_user_cols(ib_table)-1)))(+)"
dict_table_open_on_name	NULL==ib_table(+)
dict_table_open_on_name	!table(+)
dict_table_open_on_name	!row_is_mysql_tmp_table_name(table->name)(+)
dict_table_open_on_name	table->can_be_evicted(+)
dict_table_open_on_name	table->ibd_file_missing(+)
dict_table_open_on_name	!table(+)
dict_table_open_on_name	table!=0(+)
dict_table_open_on_name	!table(+)
dict_table_open_on_name	"table->ibd_file_missing		 &&!dict_table_is_discarded(table)(+)"
fgets	fgets(line_buffer,MAX_TEST_QUERY_LENGTH*2,log_file)==NULL(+)
fgets	feof(log_file)(+)
fgets	!input||((*input!='y')&&(*input!='Y'))(+)
fgets	ret==0(+)
fgets	str(+)
fil_space_get_by_id	space!=NULL(+)
fil_space_get_by_id	!space(+)
fil_space_get_by_id	!space(+)
fil_space_get_by_id	space==NULL(+)
fil_space_get_by_id	space==NULL(+)
fil_space_get_by_id	space==NULL(+)
fil_space_get_by_id	space!=NULL&&space->stop_ios(+)
fil_space_get_by_id	space==0||(type==OS_FILE_READ&&space->stop_new_ops)(+)
find_log_pos	(err=find_log_pos(&linfo,NullS,false/*need_lock_index=false*/))!=0(+)
find_log_pos	(error=find_log_pos(&check_log_info,log_info.log_file_name,               need_lock_index))(+)
find_log_pos	(error=find_log_pos(&log_info,NullS,true/*need_lock_index=true*/))(+)
find_log_pos	(error=find_log_pos(&log_info,to_log,false/*need_lock_index=false*/))(+)
find_log_pos	(error=find_log_pos(&rli->linfo,rli->get_event_relay_log_name(),            false/*need_lock_index=false*/))||  (error=find_next_log(&rli->linfo,false/*need_lock_index=false*/))(+)
find_log_pos	(error=find_log_pos(&rli->linfo,rli->get_event_relay_log_name(),            false/*need_lock_index=false*/))(+)
find_log_pos	relay_log.find_log_pos(&flinfo,NullS,1)(+)
find_log_pos	rli->relay_log.find_log_pos(&linfo,rli->get_group_relay_log_name(),1)(+)
fopen	!(cur_file->file=fopen(buff,"rb"))(+)
fopen	f==NULL(+)
fopen	(file=fopen(bootstrap_file,"r"))==NULL(+)
fopen	(file=fopen(bootstrap,"w+"))==NULL(+)
fopen	!(in=fopen(infile_name,"r"))(+)
fopen	!input_file(+)
fopen	(m_file=fopen(m_file_name,"wb+"))==NULL(+)
fopen	!(out=fopen(outfile_name,"w"))(+)
fopen	!srv_monitor_file(+)
fread	(bytes=fread(buf,1,sizeof(buf),m_file))<=0(+)
fread	ferror(m_file)(+)
fread	fseek(m_file,show_offset,SEEK_END)!=0(+)
fread	fseek(m_file,0L,SEEK_SET)!=0(+)
fread	ferror(f)(+)
fread	bytes!=physical_page_size(+)
fread	bytes!=UNIV_PAGE_SIZE_MIN(+)
fread	n_bytes!=sizeof(row)(+)
getaddrinfo	getaddrinfo(ipv4_all_addresses,port_buf,&hints,&ai)(+)
getaddrinfo	getaddrinfo(my_bind_addr_str,port_buf,&hints,&ai)(+)
getaddrinfo	getaddrinfo(ipv4_all_addresses,port_buf,&hints,&ai)(+)
getaddrinfo	getaddrinfo(ipv4_all_addresses,port_buf,&hints,&ai)(+)
getaddrinfo	getaddrinfo(my_bind_addr_str,port_buf,&hints,&ai)(+)
my_malloc	!(used_entry=(DDL_LOG_MEMORY_ENTRY*)my_malloc(               sizeof(DDL_LOG_MEMORY_ENTRY),MYF(MY_WME)))(+)
my_malloc	"!(block=(SORT_KEY_BLOCKS*)my_malloc((sizeof(SORT_KEY_BLOCKS)+					  buffer_length+IO_SIZE)*blocks,					 MYF(0)))(+)"
my_malloc	histfile&&histfile[0](+)
my_malloc	"!(histfile_tmp=(char*)my_malloc((uint)strlen(histfile)+5,					  MYF(MY_WME)))(+)"
my_malloc	"!(histfile_tmp=(char*)my_malloc((uint)strlen(histfile)+5,					  MYF(MY_WME)))(+)"
my_malloc	!(command_buffer=(uchar*)my_malloc(allocation_size,MYF(MY_WME)))(+)
my_malloc	!(command_buffer=(uchar*)my_malloc(allocation_size,MYF(MY_WME)))(+)
my_malloc	!(fname=(char*)my_malloc(full_len,MYF(MY_WME)))(+)
my_malloc	(file=create_unique_file(fname,ptr))<0(+)
my_malloc	my_parse_charset_xml(loader,(char*)buf,len)(+)
my_malloc	!(tmp=(char*)my_malloc(length*2+1,MYF(MY_WME)))(+)
my_open	user_supplied_query&&my_stat(user_supplied_query,&sbuf,MYF(0))(+)
my_open	(data_file=my_open(user_supplied_query,O_RDWR,MYF(0)))==-1(+)
my_open	(fd=my_open((constchar*)fname,O_CREAT|O_RDWR,MYF(MY_WME)))<0(+)
my_open	init_io_cache(&io_cache,fd,IO_SIZE*2,WRITE_CACHE,0L,0,MYF(MY_WME))(+)
my_open	(fd=my_open(buff,flags,         MYF(MY_WME|MY_FFNF)))<0(+)
my_open	append&&my_seek(fd,0,SEEK_END,MYF(0))==MY_FILEPOS_ERROR(+)
my_open	my_write(fd,(uchar*)str,size,MYF(MY_WME|MY_FNABP))(+)
my_open	(fd=my_open(ds_pidfile_name.str,O_RDONLY,MYF(0)))<0(+)
my_open	(fd=my_open(filename1,O_RDONLY,MYF(0)))<0(+)
my_open	(fd2=my_open(filename2,O_RDONLY,MYF(0)))<0(+)
my_strdup	!(con_slot->name=my_strdup(ds_connection_name.str,MYF(MY_WME)))(+)
my_strdup	!(con->name=my_strdup("-closed_connection-",MYF(MY_WME)))(+)
my_strdup	!(con->name=my_strdup("default",MYF(MY_WME)))(+)
my_strdup	histfile&&histfile[0](+)
my_strdup	"!(histfile_tmp=(char*)my_malloc((uint)strlen(histfile)+5,					  MYF(MY_WME)))(+)"
my_strdup	!strchr(argument,'.')(+)
my_strdup	str(+)
my_strdup	strlen(argument)>=FN_REFLEN(+)
mysql_affected_rows	!(mysql_real_connect(mysql_local,opt_host,opt_user,             opt_password,current_db,opt_port,             opt_unix_socket,CLIENT_MULTI_STATEMENTS))(+)
mysql_affected_rows	(result=mysql_store_result(mysql_local))(-)
mysql_affected_rows	!(rc=mysql_more_results(mysql_local))(+)
mysql_affected_rows	!(mysql_real_connect(mysql_local,opt_host,opt_user,             opt_password,current_db,opt_port,             opt_unix_socket,CLIENT_MULTI_STATEMENTS))(+)
mysql_affected_rows	(result=mysql_store_result(mysql_local))(-)
byword	sscanf(cp,scheck(cp,"%d"),&rp->r_loyear)!=1(+)
byword	sscanf(cp,scheck(cp,"%d"),&rp->r_loyear)!=1(+)
byword	sscanf(cp,scheck(cp,"%d"),&rp->r_hiyear)!=1(+)
byword	(lp=byword(dp,lasts))!=NULL(-)
byword	(lp=byword(dp,wday_names))==NULL(+)
byword	(lp=byword(dp,lasts))!=NULL(-)
byword	(lp=byword(dp,wday_names))==NULL(+)
byword	lp==NULL(+)
byword	(lp=byword(fields[LP_MONTH],mon_names))==NULL(+)
byword	(lp=byword(fields[LP_ROLL],leap_types))==NULL(+)
byword	(lp=byword(monthp,mon_names))==NULL(+)
canonicalize_path	!fname(+)
canonicalize_path	strchr(location,'\'')(+)
canonicalize_path	!is_absolute_path(+)
canonicalize_path	!is_absolute_path(+)
canonicalize_path	!new(+)
canonicalize_path	!new(+)
cfclose	!cfp(+)
cfclose	cfclose(cfp)!=0(+)
cfclose	cfclose(ctx->blobsTocFH)!=0(+)
cfclose	tocFH==NULL(+)
cfclose	cfclose(tocFH)!=0(+)
cfclose	tocFH==NULL(+)
cfclose	cfclose(tocFH)!=0(+)
closedir	closedir(dir)(+)
closedir	closedir(dir)(+)
closedir	dir(+)
closedir	closedir(dir)(+)
closedir	closedir(dir)(+)
closedir	closedir(xldir)(+)
closedir	closedir(xldir)(+)
closedir	closedir(xldir)(+)
exprType	subexpr==NULL(+)
exprType	subexpr==NULL(+)
exprType	subexpr==NULL(+)
exprType	"exprType(texpr)!=lfirst_oid(lctyp)||				exprTypmod(texpr)!=lfirst_int(+)"
exprType	exprCollation(texpr)!=lfirst_oid(+)
exprType	transform(+)
exprType	expression_returns_set(transform)(+)
exprType	transform==NULL(+)
exprType	transform(+)
exprType	expr==NULL(+)
exprType	expr==NULL(+)
exprType	inputTypeId!=BOOLOID(+)
fclose	fclose(AH->FH)!=0(+)
fclose	fclose(AH->FH)!=0(+)
fclose	cf==NULL(+)
fclose	fwrite(recoveryconfcontents->data,recoveryconfcontents->len,1,cf)!=1(+)
fclose	conf_file==NULL(+)
fclose	fclose(conf_file)(+)
fclose	!copystream(+)
fclose	!difffile(+)
fclose	extra_conf==NULL(+)
fclose	f==NULL(+)
fclose	!f(+)
fclose	!f(+)
fclose	fd==NULL||fgets(filename,sizeof(filename),fd)==NULL(+)
fclose	fd==NULL||fgets(filename,sizeof(filename),fd)==NULL(+)
fopen	!difffile(+)
fopen	extra_conf==NULL(+)
fopen	!f(+)
fopen	!f(+)
fopen	!f(+)
fopen	f==NULL(+)
fopen	fd==NULL||fgets(filename,sizeof(filename),fd)==NULL(+)
fopen	fd==NULL||fgets(filename,sizeof(filename),fd)==NULL(+)
fopen	!fname(+)
fopen	!fh(+)
fopen	!fh(+)
fwrite	fwrite(buf,r,1,tarfile)!=1(+)
fwrite	fwrite(buf.data,buf.len,1,f)!=1(+)
fwrite	FreeFile(f)(+)
fwrite	fwrite(copybuf,r,1,file)!=1(+)
fwrite	"fwrite(labelfbuf.data,labelfbuf.len,1,fp)!=1||				fflush(fp)!=0||				pg_fsync(fileno(fp))!=0||				ferror(fp)||				FreeFile(fp)(+)"
fwrite	fd==-1||!stream(+)
fwrite	cf==NULL(+)
fwrite	fwrite(recoveryconfcontents->data,recoveryconfcontents->len,1,cf)!=1(+)
fwrite	fpout==NULL(+)
fwrite	fpout==NULL(+)
fwrite	fpout==NULL(+)
fwrite	ferror(fpout)(+)
list_length	list_length(args)>2(+)
list_length	list_length(args)>2(+)
list_length	list_length(args)>FUNC_MAX_ARGS(+)
list_length	list_length(args)==2(-)
list_length	list_length(args)!=2(+)
list_length	list_length(as)!=1(+)
list_length	list_length(as)!=1(+)
list_length	list_length(clumps)!=1(+)
list_length	list_length(clumps)!=1(+)
stat	stat(BACKUP_LABEL_FILE,&stat_buf)!=0(+)
stat	stat(BACKUP_LABEL_FILE,&statbuf)(+)
stat	stat(ConfigFileName,&stat_buf)!=0(+)
stat	stat(ctx->directory,&st)==0&&S_ISDIR(+)
stat	stat(DataDir,&stat_buf)!=0(+)
stat	stat(DataDir,&statbuf)<0(+)
stat	stat(dir,&st)<0(+)
stat	stat(dir,&st)==0&&S_ISDIR(-)
stat	stat(filename,&fst)<0(+)
stat	stat(filename,&fst)<0(+)
close	fd==-1(+)
close	fd==-1(+)
close	fd==-1(+)
close	fd==-1(+)
close	preview_fd<0(+)
close	shm_fd!=-1(+)
close	ftruncate(shm_fd,TILE_MAP_SIZE)!=-1(+)
close	shm_fd!=-1(+)
file_procedure_find	!basename_proc(+)
file_procedure_find	!strchr(basename,'.')(+)
file_procedure_find	dialog->export&&proc_in_other_group(-)
file_procedure_find	!dialog->export&&proc_in_other_group(-)
file_procedure_find	proc(+)
file_procedure_find	proc(+)
fopen	!DICOM(+)
fopen	!DICOM(+)
fopen	(f=fopen(filename,"rb"))==NULL(+)
fopen	f==NULL(+)
fopen	f==NULL(+)
fopen	!g_file_test(filename,G_FILE_TEST_IS_REGULAR)(+)
fopen	f==NULL(+)
fopen	f==NULL(+)
fopen	fread(buf,32,1,f)<1   ||fread(&psp_ver_major,2,1,f)<1   ||fread(&psp_ver_minor,2,1,f)<1(+)
fopen	NULL==f(+)
fopen	!f(+)
g_list_find	!g_list_find(factory->p->open_dialogs,dialog)(+)
g_list_find	!g_list_find(factory->p->open_dialogs,dialog)(+)
g_list_find	g_list_find(gfig_context->current_obj->obj_list,         gfig_context->selected_obj)(-)
g_list_find	g_list_find(gfig_context->current_obj->obj_list,         gfig_context->selected_obj)(-)
g_list_find	g_list_find(gfig_context->current_obj->obj_list,         gfig_context->selected_obj)(-)
g_list_find	g_list_find(gfig_context->current_obj->obj_list,         gfig_context->selected_obj)(-)
gimp_filename_to_utf8	!g_file_test(program,G_FILE_TEST_IS_EXECUTABLE)(+)
gimp_filename_to_utf8	!g_file_test(program,G_FILE_TEST_IS_EXECUTABLE)(+)
gimp_filename_to_utf8	0!=g_stat(l_parasite_file,&l_stat_buf)(+)
gimp_filename_to_utf8	0!=g_stat(l_parasite_file,&l_stat_buf)(+)
gimp_filename_to_utf8	!g_file_test(filename,G_FILE_TEST_IS_REGULAR)(+)
gimp_filename_to_utf8	!g_file_test(filename,G_FILE_TEST_IS_REGULAR)(+)
gimp_filename_to_utf8	!g_file_set_contents(filename,contents,length,&error)(+)
gimp_filename_to_utf8	g_mkdir(dirname,       S_IRUSR|S_IWUSR|S_IXUSR|       S_IRGRP|S_IXGRP|       S_IROTH|S_IXOTH)==-1(+)
gimp_filename_to_utf8	g_mkdir(dirname,       S_IRUSR|S_IWUSR|S_IXUSR|       S_IRGRP|S_IXGRP|       S_IROTH|S_IXOTH)==-1(+)
gimp_filename_to_utf8	g_mkdir_with_parents(dirname,              S_IRUSR|S_IWUSR|S_IXUSR|              S_IRGRP|S_IXGRP|              S_IROTH|S_IXOTH)==-1(+)
gimp_filename_to_utf8	g_mkdir_with_parents(dirname,              S_IRUSR|S_IWUSR|S_IXUSR|              S_IRGRP|S_IXGRP|              S_IROTH|S_IXOTH)==-1(+)
gimp_image_get_active_drawable	!drawable(+)
gimp_image_get_active_drawable	!drawable(+)
gimp_image_get_active_drawable	!drawable(+)
gimp_image_get_active_drawable	drawable(-)
gimp_image_get_active_drawable	!drawable(+)
gimp_image_get_active_drawable	!drawable(+)
gimp_layer_get_mask	gimp_drawable_has_alpha(l_layer_id)(+)
gimp_layer_get_mask	l_channel_id>=0(+)
gimp_layer_get_mask	!gimp_item_is_layer(l_layer_id)(+)
gimp_layer_get_mask	l_layer_mask_id>=0(+)
gimp_layer_get_mask	!gimp_drawable_has_alpha(GIMP_DRAWABLE(layer))(+)
gimp_layer_get_mask	mask >=0(+)
is_immutable	is_immutable(a)(+)
is_immutable	!is_immutable(car(sc->args))(-)
is_immutable	!is_immutable(car(sc->args))(-)
is_immutable	is_immutable(car(sc->args))(+)
is_immutable	is_immutable(car(sc->code))(+)
is_immutable	is_immutable(car(sc->code))(+)
is_pair	!is_pair(car(sc->code))||!is_pair(cdar(sc->code))(+)
is_pair	!is_pair(cdr(sc->code))(+)
is_pair	!is_pair(sc->args)||!is_number(car(sc->args))(+)
is_pair	is_pair(sc->code)(+)
is_pair	is_pair(sc->code)(+)
is_pair	!is_pair(sc->code)(+)
is_pair	x==sc->NIL(-)
is_pair	is_symbol(x)(-)
is_pair	!is_pair(x)(+)
is_pair	!is_list(sc,car(x))(+)
is_pair	!is_pair(car(y))(+)
is_pair	!is_pair(car(y))(+)
lseek	lseek(fd,-((off_t)sizeof(PatternHeader)),SEEK_CUR)<0(+)
lseek	fd<0(+)
lseek	!fd(+)
lseek	!fd(+)
lseek	"read(fd,		  format2_preamble,		  sizeof(format2_preamble))!=sizeof(format2_preamble)(+)"
lseek	offset==-1(+)
lseek	offset==-1(+)
lseek	fd<0(+)
mk_closure	is_continuation(sc->code)(-)
mk_closure	is_immutable(car(sc->code))(+)
mk_closure	is_immutable(car(sc->code))(+)
mk_closure	!is_symbol(x)(+)
mk_closure	is_pair(sc->code)(+)
mk_closure	!is_pair(car(sc->code))||!is_pair(cdar(sc->code))(+)
mk_closure	!is_list(sc,car(x))(+)
mk_closure	!is_pair(car(sc->code))||!is_pair(caar(sc->code))||!is_pair(cdaar(sc->code))(+)
mk_closure	is_true(+)
mk_closure	car(sc->code)==sc->FEED_TO(+)
token	sc->tok==TOK_RPAREN(-)
token	sc->tok==TOK_DOT(+)
token	sc->tok==TOK_RPAREN(-)
token	sc->tok==TOK_DOT(+)
token	x==sc->F(+)
token	sc->tok==TOK_RPAREN(-)
token	sc->tok==TOK_DOT(+)
token	x==sc->F(+)
token	x==sc->F(+)
token	sc->tok==TOK_RPAREN(-)
find_dissector	!name(+)
find_dissector	!p||strlen(p)==0u(+)
find_dissector	!find_dissector(p)(+)
find_dissector	!find_dissector(protos[i])(+)
find_dissector	!(h->handles[i]=find_dissector(protos[i]))(+)
find_dissector_table	sub_dissectors==NULL(+)
find_dissector_table	sub_dissectors==NULL(+)
find_dissector_table	sub_dissectors==NULL(+)
find_dissector_table	!(*(table_name))(+)
find_dissector_table	!table_matching(+)
find_dissector_table	!(*(table_name))(+)
find_dissector_table	!table_matching(+)
g_hash_table_lookup	(cls=(_cnd_class*)g_hash_table_lookup(classes,class_id))==NULL(+)
g_hash_table_lookup	g_hash_table_lookup(dissector_tables,name)(+)
g_hash_table_lookup	!(orig=(xml_ns_t*)g_hash_table_lookup(elements,elem_name))(+)
g_hash_table_lookup	(gog=(mate_gog*)g_hash_table_lookup(gop->cfg->gog_index,key))(+)
g_hash_table_lookup	(c=(mate_cfg_gop*)g_hash_table_lookup(mc->gopcfgs,yymsp[0].minor.yy0))(-)
g_hash_table_lookup	(c= (mate_cfg_pdu*)g_hash_table_lookup(mc->pducfgs,yymsp[0].minor.yy0))(-)
g_hash_table_lookup	g_hash_table_lookup(mc->transfs,yymsp[-2].minor.yy0)(+)
g_hash_table_lookup	(t=(AVPL_Transf*)g_hash_table_lookup(mc->transfs,yymsp[0].minor.yy0))(-)
g_hash_table_lookup	!filter_name(+)
g_hash_table_lookup	existing_name!=NULL(+)
getcwd	path_max==-1(+)
getcwd	getcwd(curdir,path_max)==NULL(+)
getenv	(env=getenv("DISPLAY"))!=NULL(+)
getenv	(env=getenv("REMOTEHOST"))!=NULL(+)
getenv	(env=getenv("DISPLAY"))!=NULL(+)
getenv	(env=getenv("SSH_CLIENT"))!=NULL(+)
getenv	(env=getenv("REMOTEHOST"))!=NULL(+)
getenv	(env=getenv("DISPLAY"))!=NULL(+)
getenv	(env=getenv("SSH_CONNECTION"))!=NULL(+)
getenv	(env=getenv("SSH_CLIENT"))!=NULL(+)
inet_ntop	inet_ntop(AF_INET,&if_addr->addr.ip4_addr,addr_str,               ADDRSTRLEN)(-)
inet_ntop	inet_ntop(AF_INET6,&if_addr->addr.ip6_addr,               addr_str,ADDRSTRLEN)(-)
inet_pton	inet_pton(AF_INET6,optarg,hdr_ipv6_src_addr)<=0(+)
inet_pton	inet_pton(AF_INET,optarg,&hdr_ip_src_addr)<=0(+)
inet_pton	*p=='\0'(+)
inet_pton	inet_pton(AF_INET6,p,hdr_ipv6_dest_addr)<=0(+)
inet_pton	inet_pton(AF_INET,p,&hdr_ip_dest_addr)<=0(+)
inet_pton	inet_pton(AF_INET6,optarg,hdr_ipv6_src_addr)<=0(+)
inet_pton	inet_pton(AF_INET,optarg,&hdr_ip_src_addr)<=0(+)
inet_pton	*p=='\0'(+)
luaL_checklstring	!pattern(+)
luaL_checklstring	lua_gettop(L)>=1(+)
luaL_checklstring	s(-)
luaL_checklstring	!s(+)
luaL_checklstring	!s(+)
luaL_checklstring	!s(+)
luaL_checklstring	!s(+)
luaL_checklstring	!s(+)
luaL_checklstring	lua_isboolean(-)
luaL_checklstring	!lua_isnil(+)
luaL_checklstring	!text(+)
read	bytes<=0(+)
read	newly==0(-)
read	newly==-1(+)
read	newly<0(+)
read	newly<0(+)
read	newly!=required(+)
read	newly!=-1(+)
read	fd==-1(+)
read	ret==-1(+)
try_val_to_str	command_status_str==NULL(+)
try_val_to_str	pkg->event_names&&(strval=try_val_to_str(name_minor,pkg->event_names))(-)
try_val_to_str	pkg->param_names&&(strval=try_val_to_str(name_minor,pkg->param_names))(-)
try_val_to_str	pkg->signal_names&&(strval=try_val_to_str(name_minor,pkg->signal_names))(-)
try_val_to_str	pkg->signal_names&&(strval=try_val_to_str(name_minor,pkg->signal_names))(-)
try_val_to_str	curr_info.evt&&curr_info.evt->param_names&&(strval=try_val_to_str(param_id,curr_info.evt->param_names))(-)
try_val_to_str	curr_info.sig&&curr_info.sig->param_names&&(strval=try_val_to_str(param_id,curr_info.sig->param_names))(-)
try_val_to_str	try_val_to_str(id,tpncp_events_id_vals)(+)
try_val_to_str	tpncp_events_info_db[id].tpncp_data_field_size(+)
try_val_to_str	try_val_to_str(id,tpncp_commands_id_vals)(+)
try_val_to_str	try_val_to_str(id,tpncp_events_id_vals)(+)
tvb_bytes_exist	!member_tvb(+)
tvb_bytes_exist	tvb_bytes_exist(member_tvb,member_offset,abs_length)(+)
tvb_bytes_exist	!member_tvb(+)
tvb_bytes_exist	tvb_bytes_exist(member_tvb,member_offset,abs_length)(+)
tvb_bytes_exist	!pinfo->fragmented&&tvb_bytes_exist(tvb,0,reported_len)(+)
tvb_bytes_exist	!tvb_bytes_exist(tvbr->tvb->ws_tvb,offset,2)(+)
tvb_bytes_exist	!tvb_bytes_exist(tvbr->tvb->ws_tvb,offset,2)(+)
tvb_bytes_exist	!tvb_bytes_exist(tvbr->tvb->ws_tvb,offset,2)(+)
tvb_get_letohl	iLen==-1(-)
tvb_get_letohl	iLen==0(-)
tvb_get_letohl	iLen>0(-)
tvb_get_letohl	iLen==-1(-)
tvb_get_letohl	iLen==0(-)
tvb_get_letohl	iLen>0(-)
tvb_get_letohl	iLen==-1(-)
tvb_get_letohl	iLen>=0(-)
tvb_get_letohl	instructionID==I_3PLUS1(+)
wslua_get_field	!wslua_get_table(L,-1,pinfo->heur_list_name)(+)
wslua_get_field	!wslua_get_field(L,-1,pinfo->current_proto)(+)
wslua_get_field	!lua_isfunction(+)
wslua_get_field	lua_pcall(L,3,1,0)(+)
wslua_get_field	lua_isfunction(+)
wslua_get_field	!lua_istable(+)
wslua_get_table	!has_heur_dissector_list(listname)(+)
wslua_get_table	lua_isfunction(+)
wslua_get_table	!lua_istable(+)
wslua_get_table	!lua_isfunction(+)